name: Backend tests
run-name: ${{ github.actor }} launching backend tests

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**', '.github/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'backend/**', '.github/**' ]

env:
  POSTGRES_USER: root
  POSTGRES_PASSWORD: password
  POSTGRES_DB: app
  NODE_ENV: test
  # TODO: use github secrets
  JWT_SECRET: QHUP0R3vieku9oG0zvpJ96WCCv2RI1g0B1S4e9i1tIxZGfLfrOIiWdGf5vyA98aw

jobs:
  unit-tests:
    name: Unit tests (backend)
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 1s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Wait for postgresql
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgresql to start..."
            sleep 1;
          done
      - name: Install dependencies
        run: npm install
      - name: Migrate database
        run: NODE_ENV=test npm run migrate
      - name: Seed database
        run: NODE_ENV=test npm run seed
      - name: Launch unit tests
        run: npm test
  eslint:
    name: Eslint (backend)
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install eslint
        run: npm install eslint
      - name: Launch eslint
        run: npm run lint
